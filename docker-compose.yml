 version: "3"
 services:

  app:
   hostname: "app"
   image: wordpress:php7.2-fpm
   env_file:
     - ./Docker/app/app.env
   volumes:
     - ./code:/code
   restart: unless-stopped
   networks:
    vp-network:
     aliases:
     - server1.docker
  nginx:
   hostname: "nginx"
   image: nginx:latest
   ports:
     - "80:80"
   volumes:
     - ./code:/code
     - ./site.conf:/etc/nginx/conf.d/default.conf
   restart: unless-stopped
   networks:
    vp-network:
     aliases:
     - server2.docker
  db:
   hostname: "db"
   image: mysql:5.7
   volumes:
     - /var/lib/mysql
   restart: unless-stopped
   networks:
    vp-network:
     aliases:
     - server3.docker
   env_file:
     - ./Docker/db/db.env
   volumes:
     - ./createDB.sql:/docker-entrypoint-initdb.d/createDB.sql      
           #     - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
       #   entrypoint: ["wait-for-it.sh", "mysql", "--", "docker-entrypoint.sh"]
          #   command: 'mysql -uroot -p"$MYSQL_ROOT_PASSWORD" < ./createDB.sql'
       #   environment:
       #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
       #     - MYSQL_DATABASE=${MYSQL_DATABASE:-dbname}
       #     - MYSQL_USER=${MYSQL_USER:-dbuser}
       #     - MYSQL_PASSWORD=${MYSQL_PASSWORD:-dbpassword}
 networks:
         vp-network:
                 driver: bridge
